{
    "openapi": "3.0.0",
    "info": {
        "title": "Mon API",
        "description": "Documentation de l'API de votre application.",
        "version": "1.0.0"
    },
    "paths": {
        "/api/auth/register": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Register",
                "description": "Register a new user",
                "operationId": "authRegister",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password",
                                    "username"
                                ],
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "example": "maestros21"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "PassWord12345"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "maestros.roslyn@gmail.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "eyJ0eXAiOiJKV1QiLCJ...."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error - Invalid request data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "object",
                                            "example": {
                                                "username": [
                                                    "Le username est un champ requis."
                                                ],
                                                "password": [
                                                    "Le mot de passe est un champ requis."
                                                ],
                                                "email": [
                                                    "L'email est un champ requis."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Error - Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error - Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "object",
                                            "example": {
                                                "username": [
                                                    "Le username est un champ requis."
                                                ],
                                                "password": [
                                                    "TLe mot de passe doit avoir au moins 6 characteres"
                                                ],
                                                "email": [
                                                    "L'email doit etre valide"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Sign in",
                "description": "Login by email, password",
                "operationId": "authLogin",
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "password",
                                    "username"
                                ],
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "example": "maestros21"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "PassWord12345"
                                    },
                                    "persistent": {
                                        "type": "boolean",
                                        "example": "true"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Error - Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid credentials"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "Logged in successfully"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Logged in successfully"
                                        },
                                        "content": {
                                            "properties": {
                                                "user": {
                                                    "$ref": "#/components/schemas/User"
                                                },
                                                "token": {
                                                    "type": "string",
                                                    "example": "eyJ0eXAiOiJKV1QiLCJ...."
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/user": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Get user details",
                "description": "Get details of the authenticated user",
                "operationId": "authUser",
                "responses": {
                    "401": {
                        "description": "Error - Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/auth/logout": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Logout",
                "description": "Invalidate token and log out user",
                "operationId": "authLogout",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWT token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "Bearer {your_token}"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully logged out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully logged out"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/cours/findAll": {
            "get": {
                "tags": [
                    "cours"
                ],
                "summary": "Get all cours",
                "description": "Retrieve a list of all cours",
                "operationId": "findAllcours",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWT token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Bearer {your_token}"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "cours": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Cour"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Error - Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/cours/findOne/{id}": {
            "get": {
                "tags": [
                    "cours"
                ],
                "summary": "Get cour information",
                "description": "Get information about a specific cour",
                "operationId": "findOneCours",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWT token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "Bearer {your_token}"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of cour to get information for",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Error - Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Error - Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Cour not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Cour trouvé"
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Cour"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/cours/create": {
            "post": {
                "tags": [
                    "cours"
                ],
                "summary": "Create a new course",
                "description": "Create a new course resource",
                "operationId": "createCours",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWT token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "Bearer {your_token}"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "libelle",
                                    "date_cour",
                                    "heure_debut",
                                    "heure_fin",
                                    "professeur_id"
                                ],
                                "properties": {
                                    "libelle": {
                                        "type": "string",
                                        "example": "Mathematics"
                                    },
                                    "date_cour": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2023-06-05"
                                    },
                                    "heure_debut": {
                                        "type": "string",
                                        "example": "09:00"
                                    },
                                    "heure_fin": {
                                        "type": "string",
                                        "example": "10:30"
                                    },
                                    "professeur_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Error - Invalid request data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Could not create this Course"
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "example": {
                                                "libelle": [
                                                    "The libelle field is required."
                                                ],
                                                "date_cour": [
                                                    "The date_cour field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Course created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Cour"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/cours/update": {
            "post": {
                "tags": [
                    "cours"
                ],
                "summary": "Update a cour's information",
                "description": "Update a cour's information",
                "operationId": "updateCours",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWT token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "Bearer {your_token}"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "libelle",
                                    "date_cour",
                                    "heure_debut",
                                    "heure_fin",
                                    "professeur_id"
                                ],
                                "properties": {
                                    "libelle": {
                                        "type": "string",
                                        "format": "text",
                                        "example": "Histoire"
                                    },
                                    "date_cour": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "1990-01-01"
                                    },
                                    "heure_debut": {
                                        "type": "string",
                                        "example": "12-03-34"
                                    },
                                    "heure_fin": {
                                        "type": "string",
                                        "example": "12-03-34"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Error - Invalid request data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "object",
                                            "example": {
                                                "heure_debut": [
                                                    "The heure_debut field is required."
                                                ],
                                                "heure_fin": [
                                                    "The heure_fin field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Error - Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Error - Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Cour not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "cour": {
                                            "$ref": "#/components/schemas/Cour"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/cours/delete/{id}": {
            "delete": {
                "tags": [
                    "cours"
                ],
                "summary": "Delete a cour",
                "description": "Delete a cour resource",
                "operationId": "deleteCours",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWT token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "Bearer {your_token}"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of cour to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Error - Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Error - Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Cour not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/api/eleves/findAll": {
            "get": {
                "tags": [
                    "eleves"
                ],
                "summary": "Get all eleves",
                "description": "Retrieve a list of all eleves",
                "operationId": "elevesIndex",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWT token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Bearer {your_token}"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "eleves": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Eleve"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Error - Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/eleves/findOne/{id}": {
            "get": {
                "tags": [
                    "eleves"
                ],
                "summary": "Get eleve information",
                "description": "Get information about a specific eleve",
                "operationId": "viewEleve",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWT token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "Bearer {your_token}"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of eleve to get information for",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Error - Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Error - Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Eleve not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Élève trouvé(e)"
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Eleve"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/eleves/create": {
            "post": {
                "tags": [
                    "eleves"
                ],
                "summary": "Create a new eleve",
                "description": "Create a new eleve resource",
                "operationId": "createEleve",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWT token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "Bearer {your_token}"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password",
                                    "username",
                                    "first_name",
                                    "last_name",
                                    "date_de_naissance",
                                    "lieu_de_naissance",
                                    "sexe",
                                    "telephone",
                                    "solvable",
                                    "redoublant",
                                    "user_id"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "maestros.roslyn@gmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "PassWord12345"
                                    },
                                    "username": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "first_name": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "Smith"
                                    },
                                    "date_de_naissance": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "1990-01-01"
                                    },
                                    "lieu_de_naissance": {
                                        "type": "string",
                                        "example": "Paris"
                                    },
                                    "photo": {
                                        "type": "string",
                                        "example": "https://example.com/photo.jpg",
                                        "nullable": true
                                    },
                                    "sexe": {
                                        "type": "string",
                                        "example": "Male"
                                    },
                                    "telephone": {
                                        "type": "string",
                                        "example": "+33123456789",
                                        "nullable": true
                                    },
                                    "solvable": {
                                        "type": "boolean",
                                        "example": "true"
                                    },
                                    "redoublant": {
                                        "type": "boolean",
                                        "example": "false"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Error - Invalid request data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "object",
                                            "example": {
                                                "email": [
                                                    "The email field is required."
                                                ],
                                                "password": [
                                                    "The password field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Error - Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error - Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "object",
                                            "example": {
                                                "email": [
                                                    "The email must be a valid email address."
                                                ],
                                                "password": [
                                                    "The password must be at least 8 characters."
                                                ],
                                                "username": [
                                                    "The username field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "eleve": {
                                            "$ref": "#/components/schemas/Eleve"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/eleves/update": {
            "post": {
                "tags": [
                    "eleves"
                ],
                "summary": "Update a eleve's information",
                "description": "Update a eleve's information",
                "operationId": "updateEleve",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWT token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "Bearer {your_token}"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "maestros.roslyn@gmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "PassWord12345"
                                    },
                                    "username": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "first_name": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "Smith"
                                    },
                                    "date_de_naissance": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "1990-01-01"
                                    },
                                    "lieu_de_naissance": {
                                        "type": "string",
                                        "example": "Paris"
                                    },
                                    "photo": {
                                        "type": "string",
                                        "example": "https://example.com/photo.jpg",
                                        "nullable": true
                                    },
                                    "sexe": {
                                        "type": "string",
                                        "example": "Male"
                                    },
                                    "telephone": {
                                        "type": "string",
                                        "example": "+33123456789",
                                        "nullable": true
                                    },
                                    "solvable": {
                                        "type": "boolean",
                                        "example": "true"
                                    },
                                    "redoublant": {
                                        "type": "boolean",
                                        "example": "false"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Error - Invalid request data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "object",
                                            "example": {
                                                "email": [
                                                    "The email field is required."
                                                ],
                                                "password": [
                                                    "The password field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Error - Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Error - Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Eleve not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "eleve": {
                                            "$ref": "#/components/schemas/Eleve"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/eleves/delete/{id}": {
            "delete": {
                "tags": [
                    "eleves"
                ],
                "summary": "Delete an eleve",
                "description": "Delete an eleve resource",
                "operationId": "deleteEleve",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWT token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "Bearer {your_token}"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of eleve to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Error - Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Error - Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Eleve not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/api/parents/findAll": {
            "get": {
                "tags": [
                    "parents"
                ],
                "summary": "Get all parents",
                "description": "Retrieve a list of all parents",
                "operationId": "showAllParent",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Parents"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Error - Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/parents/findOne/{parentId}": {
            "get": {
                "tags": [
                    "parents"
                ],
                "summary": "Get parent information",
                "description": "Get information about a specific parent",
                "operationId": "showOneParent",
                "parameters": [
                    {
                        "name": "parentId",
                        "in": "path",
                        "description": "ID of the parent to get information for",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Parent trouvé"
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Parents"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Error - Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Parent non trouvé"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/parents/create": {
            "post": {
                "tags": [
                    "parents"
                ],
                "summary": "Create a new parent",
                "description": "Create a new parent resource",
                "operationId": "storeParent",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password",
                                    "name",
                                    "first_name",
                                    "last_name",
                                    "date_de_naissance",
                                    "lieu_de_naissance",
                                    "sexe",
                                    "telephone",
                                    "profession"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user1@mail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "PassWord12345"
                                    },
                                    "username": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "first_name": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "Smith"
                                    },
                                    "date_de_naissance": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "1990-01-01"
                                    },
                                    "lieu_de_naissance": {
                                        "type": "string",
                                        "example": "Paris"
                                    },
                                    "photo": {
                                        "type": "string",
                                        "example": "https://example.com/photo.jpg",
                                        "nullable": true
                                    },
                                    "sexe": {
                                        "type": "string",
                                        "example": "Male"
                                    },
                                    "telephone": {
                                        "type": "string",
                                        "example": "+33123456789"
                                    },
                                    "profession": {
                                        "type": "string",
                                        "example": "Teacher"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Error - Invalid request data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Could not create this parent"
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object",
                                            "example": {
                                                "email": [
                                                    "The email field is required."
                                                ],
                                                "password": [
                                                    "The password field is required."
                                                ],
                                                "username": [
                                                    "The username field is required."
                                                ],
                                                "first_name": [
                                                    "The first name field is required."
                                                ],
                                                "last_name": [
                                                    "The last name field is required."
                                                ],
                                                "date_de_naissance": [
                                                    "The date de naissance field is required."
                                                ],
                                                "lieu_de_naissance": [
                                                    "The lieu de naissance field is required."
                                                ],
                                                "sexe": [
                                                    "The sexe field is required."
                                                ],
                                                "telephone": [
                                                    "The telephone field is required."
                                                ],
                                                "profession": [
                                                    "The profession field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Error - Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Parent created successfully"
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Parents"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/parents/update": {
            "post": {
                "tags": [
                    "parents"
                ],
                "summary": "Update a parent's information",
                "description": "Update a parent's information",
                "operationId": "updateParent",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user1@mail.com"
                                    },
                                    "username": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "first_name": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "Smith"
                                    },
                                    "date_de_naissance": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "1990-01-01"
                                    },
                                    "lieu_de_naissance": {
                                        "type": "string",
                                        "example": "Paris"
                                    },
                                    "photo": {
                                        "type": "string",
                                        "example": "https://example.com/photo.jpg",
                                        "nullable": true
                                    },
                                    "sexe": {
                                        "type": "string",
                                        "example": "Male"
                                    },
                                    "telephone": {
                                        "type": "string",
                                        "example": "+33123456789",
                                        "nullable": true
                                    },
                                    "profession": {
                                        "type": "string",
                                        "example": "Engineer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Error - Invalid request data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "object",
                                            "example": {
                                                "email": [
                                                    "The email field is required."
                                                ],
                                                "password": [
                                                    "The password field is required."
                                                ],
                                                "username": [
                                                    "The username field is required."
                                                ],
                                                "first_name": [
                                                    "The first name field is required."
                                                ],
                                                "last_name": [
                                                    "The last name field is required."
                                                ],
                                                "date_de_naissance": [
                                                    "The date de naissance field is required."
                                                ],
                                                "lieu_de_naissance": [
                                                    "The lieu de naissance field is required."
                                                ],
                                                "sexe": [
                                                    "The sexe field is required."
                                                ],
                                                "telephone": [
                                                    "The telephone field is required."
                                                ],
                                                "profession": [
                                                    "The profession field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Error - Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Error - Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Parent not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "parent": {
                                            "$ref": "#/components/schemas/Parents"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/parents/delete/{id}": {
            "delete": {
                "tags": [
                    "parents"
                ],
                "summary": "Delete a parent",
                "description": "Delete a parent resource",
                "operationId": "deleteParent",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of parent to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Error - Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Error - Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Parent not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/permissions/findAll": {
            "get": {
                "tags": [
                    "Permissions"
                ],
                "summary": "Get a list of permissions",
                "description": "Display a listing of the permissions.",
                "operationId": "permissionsIndex",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWT token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Bearer {your_token}"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Permissions retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Permission"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Error - Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/permissions/create": {
            "post": {
                "tags": [
                    "Permissions"
                ],
                "summary": "Create a new permission",
                "description": "Create a new permission.",
                "operationId": "permissionCreate",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWT token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Bearer {your_token}"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "create_users"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Create users permission"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Permission created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Permission created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Permission"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Could not create this permission"
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "description": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/permissions/findOne/{permissionId}": {
            "get": {
                "tags": [
                    "Permissions"
                ],
                "summary": "Get a specific permission",
                "description": "Display the specified permission.",
                "operationId": "permissionShow",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWT token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Bearer {your_token}"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Permission ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Permission retrieved successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Permission"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Permission not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Permission not found"
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/permissions/update/{permissionId}": {
            "put": {
                "tags": [
                    "Permissions"
                ],
                "summary": "Update a specific permission",
                "description": "Update the specified permission.",
                "operationId": "permissionUpdate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Permission ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWT token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Bearer {your_token}"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "edit_users"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Edit users permission"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Permission updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Permission updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Permission"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": "{'name': ['The name field is required.']}"
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Permission not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Permission not found"
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/permissions/delete/{permissionId}": {
            "delete": {
                "tags": [
                    "Permissions"
                ],
                "summary": "Delete a specific permission",
                "description": "Remove the specified permission from storage.",
                "operationId": "permissionDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Permission ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWT token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Bearer {your_token}"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Permission deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Permission deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Permission not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Permission not found"
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/roles/findAll": {
            "get": {
                "tags": [
                    "roles"
                ],
                "summary": "Get all roles",
                "description": "Retrieve a list of all roles",
                "operationId": "rolesIndex",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWT token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Bearer {your_token}"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "roles": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Role"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Error - Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/roles/create": {
            "post": {
                "tags": [
                    "roles"
                ],
                "summary": "Create a new role",
                "description": "Create a new role resource",
                "operationId": "createRole",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWT token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "Bearer {your_token}"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "admins"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Admin"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Error - Invalid request data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "object",
                                            "example": {
                                                "name": [
                                                    "The name field is required."
                                                ],
                                                "description": [
                                                    "The description field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Error - Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Error - Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "object",
                                            "example": {
                                                "name": [
                                                    "The name must be a valid name address."
                                                ],
                                                "description": [
                                                    "The description must be at least 8 characters."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "role": {
                                            "$ref": "#/components/schemas/Role"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/roles/findOne/{id}": {
            "get": {
                "tags": [
                    "roles"
                ],
                "summary": "Get role information",
                "description": "Get information about a specific role",
                "operationId": "viewRole",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWT token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "Bearer {your_token}"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of role to get information for",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Error - Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Error - Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Role not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Role trouve"
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Role"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/roles/update/{id}": {
            "put": {
                "tags": [
                    "roles"
                ],
                "summary": "Update a specific role",
                "operationId": "updateRole",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWT token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "Bearer {your_token}"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of eleve to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Error - Invalid request data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "object",
                                            "example": {
                                                "name": [
                                                    "The name field is required."
                                                ],
                                                "description": [
                                                    "The password field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Error - Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Error - Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Role not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "role": {
                                            "$ref": "#/components/schemas/Role"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/roles/delete/{id}": {
            "delete": {
                "tags": [
                    "roles"
                ],
                "summary": "Delete an role",
                "description": "Delete an role resource",
                "operationId": "deleteRole",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWT token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "Bearer {your_token}"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of role to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Error - Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Error - Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Role not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/api/users/findAll": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get a list of users",
                "operationId": "usersIndex",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWT token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Bearer {your_token}"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Users retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Error - Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/create": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create a new user",
                "operationId": "userCreate",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWT token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Bearer {your_token}"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "username": {
                                        "type": "string",
                                        "example": "maestros21"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "secret"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Could not create this user"
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "username": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "password": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/findOne/{userId}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get a specific user",
                "description": "Get information about a specific user by user ID",
                "operationId": "userShow",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Utilisateur trouvé(e)"
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Utilisateur non trouvé(e)"
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/update/{id}": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Update a  user",
                "operationId": "userUpdate",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWT token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Bearer {your_token}"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of role to get information for",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "username": {
                                        "type": "string",
                                        "example": "maestros21"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Could not create this user"
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "username": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/delete/{userId}": {
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete a specific user",
                "description": "Delete a specific user by user ID",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWT token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Bearer {your_token}"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User deleted successfully"
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User to delete was not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User to delete was not found"
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "BaseModel": {
                "properties": {
                    "created_at": {
                        "description": "Initial creation timestamp",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true"
                    },
                    "updated_at": {
                        "description": "Last update timestamp",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true"
                    },
                    "deleted_at": {
                        "description": "Soft delete timestamp",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true"
                    }
                },
                "type": "object"
            },
            "Cour": {
                "required": [
                    "id",
                    "libelle",
                    "date_cour",
                    "heure_debut",
                    "heure_fin"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": "1"
                    },
                    "libelle": {
                        "description": "Physique",
                        "type": "string",
                        "readOnly": true
                    },
                    "date_cour": {
                        "type": "string",
                        "format": "date",
                        "example": "1990-01-01"
                    },
                    "heure_debut": {
                        "type": "string",
                        "format": "date",
                        "example": "1990-01-01"
                    },
                    "heure_fin": {
                        "type": "string",
                        "format": "date",
                        "example": "1990-01-01"
                    },
                    "created_at": {
                        "$ref": "#/components/schemas/BaseModel/properties/created_at"
                    },
                    "updated_at": {
                        "$ref": "#/components/schemas/BaseModel/properties/updated_at"
                    },
                    "deleted_at": {
                        "$ref": "#/components/schemas/BaseModel/properties/deleted_at"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Cour"
                }
            },
            "Eleve": {
                "required": [
                    "solvable",
                    "redoublant",
                    "first_name",
                    "last_name",
                    "date_de_naissance",
                    "lieu_de_naissance",
                    "photo",
                    "sexe",
                    "telephone"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": "1"
                    },
                    "role": {
                        "description": "User role",
                        "type": "string",
                        "readOnly": true
                    },
                    "first_name": {
                        "type": "string",
                        "maxLength": 32,
                        "example": "Doe"
                    },
                    "last_name": {
                        "type": "string",
                        "maxLength": 32,
                        "example": "Smith"
                    },
                    "date_de_naissance": {
                        "type": "string",
                        "format": "date",
                        "example": "1990-01-01"
                    },
                    "lieu_de_naissance": {
                        "type": "string",
                        "maxLength": 32,
                        "example": "Paris"
                    },
                    "photo": {
                        "type": "string",
                        "format": "url",
                        "example": "https://example.com/photo.jpg"
                    },
                    "sexe": {
                        "type": "string",
                        "example": "male"
                    },
                    "telephone": {
                        "type": "string",
                        "example": "+33123456789"
                    },
                    "solvable": {
                        "type": "boolean",
                        "example": true
                    },
                    "redoublant": {
                        "type": "boolean",
                        "example": false
                    },
                    "created_at": {
                        "$ref": "#/components/schemas/BaseModel/properties/created_at"
                    },
                    "updated_at": {
                        "$ref": "#/components/schemas/BaseModel/properties/updated_at"
                    },
                    "deleted_at": {
                        "$ref": "#/components/schemas/BaseModel/properties/deleted_at"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Eleve"
                }
            },
            "Parents": {
                "required": [
                    "profession",
                    "name",
                    "first_name",
                    "last_name",
                    "date_de_naissance",
                    "lieu_de_naissance",
                    "photo",
                    "sexe",
                    "telephone",
                    "user_id",
                    "user"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": "1"
                    },
                    "profession": {
                        "type": "string",
                        "example": "Engineer"
                    },
                    "first_name": {
                        "type": "string",
                        "example": "John"
                    },
                    "last_name": {
                        "type": "string",
                        "example": "Smith"
                    },
                    "date_de_naissance": {
                        "type": "string",
                        "format": "date",
                        "example": "1990-01-01"
                    },
                    "lieu_de_naissance": {
                        "type": "string",
                        "example": "Paris"
                    },
                    "photo": {
                        "type": "string",
                        "format": "url",
                        "example": "https://example.com/photo.jpg"
                    },
                    "sexe": {
                        "type": "string",
                        "example": "male"
                    },
                    "telephone": {
                        "type": "string",
                        "example": "+33123456789"
                    },
                    "user_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    },
                    "created_at": {
                        "$ref": "#/components/schemas/BaseModel/properties/created_at"
                    },
                    "updated_at": {
                        "$ref": "#/components/schemas/BaseModel/properties/updated_at"
                    },
                    "deleted_at": {
                        "$ref": "#/components/schemas/BaseModel/properties/deleted_at"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Parents"
                }
            },
            "Permission": {
                "required": [
                    "name",
                    "description"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": "1"
                    },
                    "name": {
                        "description": "Permission name",
                        "type": "string",
                        "readOnly": true,
                        "example": "create_users"
                    },
                    "description": {
                        "description": "Permission description",
                        "type": "string",
                        "readOnly": true,
                        "example": "Create users permission"
                    },
                    "created_at": {
                        "$ref": "#/components/schemas/BaseModel/properties/created_at"
                    },
                    "updated_at": {
                        "$ref": "#/components/schemas/BaseModel/properties/updated_at"
                    },
                    "deleted_at": {
                        "$ref": "#/components/schemas/BaseModel/properties/deleted_at"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Permission"
                }
            },
            "Role": {
                "required": [
                    "name",
                    "description"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": "1"
                    },
                    "name": {
                        "description": "Role name",
                        "type": "string",
                        "readOnly": true,
                        "example": "admin"
                    },
                    "description": {
                        "description": "Role description",
                        "type": "string",
                        "readOnly": true,
                        "example": "Administrator role"
                    },
                    "created_at": {
                        "$ref": "#/components/schemas/BaseModel/properties/created_at"
                    },
                    "updated_at": {
                        "$ref": "#/components/schemas/BaseModel/properties/updated_at"
                    },
                    "deleted_at": {
                        "$ref": "#/components/schemas/BaseModel/properties/deleted_at"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Role"
                }
            },
            "User": {
                "required": [
                    "email",
                    "password",
                    "username"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": "1"
                    },
                    "role": {
                        "description": "User role",
                        "type": "string",
                        "readOnly": true
                    },
                    "email": {
                        "description": "User unique email address",
                        "type": "string",
                        "format": "email",
                        "readOnly": true,
                        "example": "user@gmail.com"
                    },
                    "username": {
                        "description": "username",
                        "type": "string",
                        "readOnly": true,
                        "example": "maestros21"
                    },
                    "email_verified_at": {
                        "description": "Datetime marker of verification status",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2019-02-25 12:59:20"
                    },
                    "password": {
                        "description": "User password",
                        "type": "string",
                        "format": "password",
                        "readOnly": true,
                        "example": "secret"
                    },
                    "created_at": {
                        "$ref": "#/components/schemas/BaseModel/properties/created_at"
                    },
                    "updated_at": {
                        "$ref": "#/components/schemas/BaseModel/properties/updated_at"
                    },
                    "deleted_at": {
                        "$ref": "#/components/schemas/BaseModel/properties/deleted_at"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "User"
                }
            }
        }
    }
}